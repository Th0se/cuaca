(()=>{"use strict";var e,t={645:(e,t,n)=>{n.d(t,{N:()=>d});const d=()=>{const e=(()=>{const e=document.createElement("div");return e.classList.add("infoContainer"),e.setAttribute("id","air"),e.appendChild((()=>{const e=document.createElement("div");e.textContent="Minimum temperature",e.classList.add("infoLabel");const t=document.createElement("div");t.classList.add("infoDisplay");const n=document.createElement("div");return n.classList.add("infoSubContainer"),n.setAttribute("id","minimumTemperature"),n.appendChild(e),n.appendChild(t),n})()),e.appendChild((()=>{const e=document.createElement("div");e.textContent="Maximum Temperature",e.classList.add("infoLabel");const t=document.createElement("div");t.classList.add("infoDisplay");const n=document.createElement("div");return n.classList.add("infoSubContainer"),n.setAttribute("id","MaximumTemperature"),n.appendChild(e),n.appendChild(t),n})()),e.appendChild((()=>{const e=document.createElement("div");e.textContent="Air pressure",e.classList.add("infoLabel");const t=document.createElement("div");t.classList.add("infoDisplay");const n=document.createElement("div");return n.classList.add("infoSubContainer"),n.setAttribute("id","airPressure"),n.appendChild(e),n.appendChild(t),n})()),e.appendChild((()=>{const e=document.createElement("div");e.classList.add("infoLabel"),e.textcontent="Air Humidity";const t=document.createElement("div");t.classList.add("infoDisplay");const n=document.createElement("div");return n.classList.add("infoSubContainer"),n.setAttribute("id","airHumidity"),n.appendChild(e),n.appendChild(t),n})()),e})(),t=(()=>{const e=document.createElement("div");e.textContent="Visibility",e.classList.add("infoLabel");const t=document.createElement("div");t.classList.add("infoDisplay");const n=document.createElement("div");return n.classList.add("infoContainer"),n.setAttribute("id","visibility"),n.appendChild(e),n.appendChild(t),n})(),n=(()=>{const e=document.createElement("div");e.classList.add("infoLabel"),e.textContent="Cloudiness";const t=document.createElement("div");t.classList.add("infoDisplay");const n=document.createElement("div");return n.classList.add("infoContainer"),n.setAttribute("id","clouds"),n.appendChild(e),n.appendChild(t),n})(),d=(()=>{const e=document.createElement("div");return e.classList.add("infoContainer"),e.setAttribute("id","wind"),e.appendChild((()=>{const e=document.createElement("div");e.textContent="Wind speed",e.classList.add("infoLabel");const t=document.createElement("div");t.classList.add("infoDisplay");const n=document.createElement("div");return n.classList.add("infoSubContainer"),n.setAttribute("id","windSpeed"),n.appendChild(e),n.appendChild(t),n})()),e.appendChild((()=>{const e=document.createElement("div");e.textContent="Wind direction",e.classList.add("infoLabel");const t=document.createElement("div");t.classList.add("infoDisplay");const n=document.createElement("div");return n.classList.add("infoSubContainer"),n.setAttribute("id","windDiredtion"),n.appendChild(e),n.appendChild(t),n})()),e.appendChild((()=>{const e=document.createElement("div");e.textContent="Gust",e.classList.add("infoLabel");const t=document.createElement("div");t.classList.add("infoDisplay");const n=document.createElement("div");return n.classList.add("infoSubContainer"),n.setAttribute("id","gust"),n.appendChild(e),n.appendChild(t),n})()),e})(),i=(()=>{const e=document.createElement("div");return e.classList.add("infoContainer"),e.setAttribute("id","weather"),e.appendChild((()=>{const e=document.createElement("label");e.textcontent="Weather group",e.classList.add("infoLabel");const t=document.createElement("div");t.classList.add("infoDisplay");const n=document.createElement("div");return n.setAttribute("id","weatherGroup"),n.classList.add("infoSubContainer"),n.appendChild(e),n.appendChild(t),n})()),e.appendChild((()=>{const e=document.createElement("div");e.textcontent="Weather Condition",e.classList.add("infoLabel");const t=document.createElement("div");t.classList.add("infoDisplay");const n=document.createElement("div");return n.classList.add("infoSubContainer"),n.setAttribute("id","weatherCondition"),n.appendChild(e),n.appendChild(t),n})()),e})(),a=(()=>{const e=document.createElement("div");return e.classList.add("infoContainer"),e.setAttribute("id","sun"),e.appendChild((()=>{const e=document.createElement("div");e.textContent="Sunrise",e.classList.add("infoLabel");const t=document.createElement("div");t.classList.add("infoDisplay");const n=document.createElement("div");return n.classList.add("infoSubContainer"),n.setAttribute("id","sunrise"),n.appendChild(e),n.appendChild(t),n})()),e.appendChild((()=>{const e=document.createElement("div");e.textContent="Sundown",e.classList.add("infoLabel");const t=document.createElement("div");t.classList.add("infoDisplay");const n=document.createElement("div");return n.classList.add("infoSubContainer"),n.setAttribute("id","sundown"),n.appendChild(e),n.appendChild(t),n})()),e})(),s=document.createElement("div");return s.setAttribute("id","motherContainer"),s.appendChild(e),s.appendChild(t),s.appendChild(n),s.appendChild(d),s.appendChild(i),s.appendChild(a),s}}},n={};function d(e){var i=n[e];if(void 0!==i)return i.exports;var a=n[e]={exports:{}};return t[e](a,a.exports,d),a.exports}d.d=(e,t)=>{for(var n in t)d.o(t,n)&&!d.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},d.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e=d(645),document.body.appendChild((0,e.N)())})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,